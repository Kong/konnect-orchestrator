// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// StatusCodeGroupedFilterDimension - The dimension to filter.
type StatusCodeGroupedFilterDimension string

const (
	StatusCodeGroupedFilterDimensionStatusCodeGrouped StatusCodeGroupedFilterDimension = "STATUS_CODE_GROUPED"
)

func (e StatusCodeGroupedFilterDimension) ToPointer() *StatusCodeGroupedFilterDimension {
	return &e
}
func (e *StatusCodeGroupedFilterDimension) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATUS_CODE_GROUPED":
		*e = StatusCodeGroupedFilterDimension(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StatusCodeGroupedFilterDimension: %v", v)
	}
}

type StatusCodeGroupedFilter struct {
	// The dimension to filter.
	Dimension StatusCodeGroupedFilterDimension `json:"dimension"`
	// The type of filter to apply.  `IN` filters will limit results to only the specified values, while `NOT_IN` filters will exclude the specified values.
	Type FilterType `json:"type"`
	// Only include the given groups of status codes in the results.
	//
	Values []string `json:"values"`
}

func (o *StatusCodeGroupedFilter) GetDimension() StatusCodeGroupedFilterDimension {
	if o == nil {
		return StatusCodeGroupedFilterDimension("")
	}
	return o.Dimension
}

func (o *StatusCodeGroupedFilter) GetType() FilterType {
	if o == nil {
		return FilterType("")
	}
	return o.Type
}

func (o *StatusCodeGroupedFilter) GetValues() []string {
	if o == nil {
		return []string{}
	}
	return o.Values
}
